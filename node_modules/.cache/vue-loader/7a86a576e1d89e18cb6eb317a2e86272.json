{"remainingRequest":"C:\\Projects\\calculator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\calculator\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projects\\calculator\\src\\App.vue","mtime":1635845146663},{"path":"C:\\Projects\\calculator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\calculator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Projects\\calculator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\calculator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vaW1wb3J0IENhbGxWaWV3IGZyb20gJy4vY29tcG9uZW50cy9DYWxsVmlldy52dWUnCmltcG9ydCBCYXNlQ2hlY2tib3ggZnJvbSAnLi9jb21wb25lbnRzL0Jhc2VDaGVja2JveC52dWUnCmltcG9ydCBMaXN0VmlldyBmcm9tICcuL2NvbXBvbmVudHMvTGlzdFZpZXcudnVlJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czogewogICAgLyogQ2FsbFZpZXcsICovIEJhc2VDaGVja2JveCwgTGlzdFZpZXcKICB9LCAgCiAgZGF0YSgpewogICAgcmV0dXJuewogICAgICBjYWxsZXI6ICcnLCAKICAgICAgY2FsbGVlOiAnJywKICAgICAgQWxsX2lzQ2hlY2tlZDogdHJ1ZSwKICAgICAgRGlyZWN0X2lzQ2hlY2tlZDogdHJ1ZSwKICAgICAgT25lX2lzQ2hlY2tlZDogdHJ1ZSwKICAgICAgVHdvX2lzQ2hlY2tlZDogdHJ1ZSwKICAgICAgcGF0aHM6IFtdLAogICAgICBzaG93ZWRQYXRoczogW10KICAgIH0KICB9LCAgCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdHRVRfREFUQScpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG15RGF0YSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuREFUQTsKICAgIH0sCiAgICBjYWxsZXJDb2RlKCkgewogICAgICByZXR1cm4gdGhpcy5jYWxsZXIuc3BsaXQoIiAiKVsxXS5zdWJzdHJpbmcoMSwgMykKICAgIH0sCiAgICBjYWxsZWVDb2RlKCkgewogICAgICByZXR1cm4gdGhpcy5jYWxsZWUuc3BsaXQoIiAiKVsxXS5zdWJzdHJpbmcoMSwgMykKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNldENoZWNrYm94KCl7ICAgICAgCiAgICAgIGlmICh0aGlzLkFsbF9pc0NoZWNrZWQpIHsKICAgICAgICB0aGlzLkRpcmVjdF9pc0NoZWNrZWQgPSB0cnVlCiAgICAgICAgdGhpcy5PbmVfaXNDaGVja2VkID0gdHJ1ZQogICAgICAgIHRoaXMuVHdvX2lzQ2hlY2tlZCA9IHRydWUKICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICB0aGlzLkRpcmVjdF9pc0NoZWNrZWQgPSBmYWxzZQogICAgICAgIHRoaXMuT25lX2lzQ2hlY2tlZCA9IGZhbHNlCiAgICAgICAgdGhpcy5Ud29faXNDaGVja2VkID0gZmFsc2UKICAgICAgfQogICAgICB0aGlzLnNob3dQYXRocygpCiAgICB9LAogICAgCiAgICBzaG93UGF0aHMoKXsgIAogICAgICBpZiAodGhpcy5EaXJlY3RfaXNDaGVja2VkICYmIHRoaXMuT25lX2lzQ2hlY2tlZCAmJiB0aGlzLlR3b19pc0NoZWNrZWQpIHsKICAgICAgICB0aGlzLkFsbF9pc0NoZWNrZWQgPSB0cnVlCiAgICAgIH0gCiAgICAgIGlmICghdGhpcy5EaXJlY3RfaXNDaGVja2VkIHx8ICF0aGlzLk9uZV9pc0NoZWNrZWQgfHwgIXRoaXMuVHdvX2lzQ2hlY2tlZCkgewogICAgICAgIHRoaXMuQWxsX2lzQ2hlY2tlZCA9IGZhbHNlCiAgICAgIH0KICAgICAgdGhpcy5zaG93ZWRQYXRocyA9IFtdCiAgICAgIGlmICh0aGlzLmNhbGxlciAhPSAnJyAmJiB0aGlzLmNhbGxlZSAhPSAnJyl7CiAgICAgICAgaWYgKCF0aGlzLkFsbF9pc0NoZWNrZWQpewogICAgICAgICAgaWYgKHRoaXMuRGlyZWN0X2lzQ2hlY2tlZCl7CiAgICAgICAgICAgIHRoaXMucGF0aHMuZm9yRWFjaChwYXRoID0+IHsKICAgICAgICAgICAgICBpZiAocGF0aC5ub2Rlcy5sZW5ndGggPT0gMikgewogICAgICAgICAgICAgICAgdGhpcy5zaG93ZWRQYXRocy5wdXNoKHBhdGgpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICAgIGlmICh0aGlzLk9uZV9pc0NoZWNrZWQpIHsKICAgICAgICAgICAgdGhpcy5wYXRocy5mb3JFYWNoKHBhdGggPT4gewogICAgICAgICAgICAgIGlmIChwYXRoLm5vZGVzLmxlbmd0aCA9PSAzKSB7CiAgICAgICAgICAgICAgICB0aGlzLnNob3dlZFBhdGhzLnB1c2gocGF0aCkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgICAgaWYgKHRoaXMuVHdvX2lzQ2hlY2tlZCkgewogICAgICAgICAgICB0aGlzLnBhdGhzLmZvckVhY2gocGF0aCA9PiB7CiAgICAgICAgICAgICAgaWYgKHBhdGgubm9kZXMubGVuZ3RoID09IDQpIHsKICAgICAgICAgICAgICAgIHRoaXMuc2hvd2VkUGF0aHMucHVzaChwYXRoKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2UgdGhpcy5zaG93ZWRQYXRocyA9IHRoaXMucGF0aHMKICAgICAgfSAgICAgIAogICAgfSwKICAgIGNyZWF0ZVBhdGggKCkgewogICAgICB0aGlzLnBhdGhzID0gW10KICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmNhbGxlckNvZGUpCiAgICAgICAgaWYgKHRoaXMuY2FsbGVyICE9ICcnICYmIHRoaXMuY2FsbGVlICE9ICcnKXsKICAgICAgICAgIGxldCBjb21wYW5pZXMgPSBbXQogICAgICAgICAgZm9yIChsZXQgY29tcGFueSBpbiB0aGlzLm15RGF0YS5jb21wYW55KSB7CiAgICAgICAgICAgIGNvbXBhbmllcy5wdXNoKGNvbXBhbnkpICAgICAgICAKICAgICAgICAgIH0gCiAgICAgICAgICBsZXQgcmVzdHJpY3RlZCA9IFt0aGlzLmNhbGxlckNvZGVdICAgICAgICAgICAKICAgICAgICAgIGNvbXBhbmllcy5mb3JFYWNoKGZpcnN0Q29tcGFueSA9PiB7CiAgICAgICAgICAgIHRoaXMubXlEYXRhLmNvbXBhbnlbZmlyc3RDb21wYW55XS5mb3JFYWNoKGZpcnN0V2F5ID0+IHsKICAgICAgICAgICAgICBpZiAoZmlyc3RXYXkuc3JjLnN1YnN0cmluZygwLDIpID09PSB0aGlzLmNhbGxlckNvZGUpIHsKICAgICAgICAgICAgICAgIGlmIChmaXJzdFdheS5kZXMuc3Vic3RyaW5nKDAsMikgPT09IHRoaXMuY2FsbGVlQ29kZSkgewogICAgICAgICAgICAgICAgICB0aGlzLnBhdGhzLnB1c2goewogICAgICAgICAgICAgICAgICAgIHRvdGFsUHJpY2U6IGZpcnN0V2F5LnByaWNlLAogICAgICAgICAgICAgICAgICAgIGNvbXBhbmllczogW2ZpcnN0Q29tcGFueV0sCiAgICAgICAgICAgICAgICAgICAgcHJpY2VzOiBbZmlyc3RXYXkucHJpY2VdLAogICAgICAgICAgICAgICAgICAgIG5vZGVzOiBbdGhpcy5jYWxsZXJDb2RlLCB0aGlzLmNhbGxlZUNvZGVdLAogICAgICAgICAgICAgICAgICAgIGlkOiB0aGlzLnBhdGhzLmxlbmd0aCsxCiAgICAgICAgICAgICAgICAgIH0pICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgIHJlc3RyaWN0ZWQucHVzaChmaXJzdFdheS5kZXMuc3Vic3RyaW5nKDAsMikpCiAgICAgICAgICAgICAgICAgIGNvbXBhbmllcy5mb3JFYWNoKHNlY29uZENvbXBhbnkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMubXlEYXRhLmNvbXBhbnlbc2Vjb25kQ29tcGFueV0uZm9yRWFjaChzZWNvbmRXYXkgPT4gewogICAgICAgICAgICAgICAgICAgICAgaWYgKHNlY29uZFdheS5zcmMgPT09IGZpcnN0V2F5LmRlcyAmJiAhKHNlY29uZFdheS5kZXMuc3Vic3RyaW5nKDAsMikgaW4gcmVzdHJpY3RlZCkpewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2Vjb25kV2F5LmRlcy5zdWJzdHJpbmcoMCwyKSA9PT0gdGhpcy5jYWxsZWVDb2RlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXRocy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUHJpY2U6IGZpcnN0V2F5LnByaWNlICsgc2Vjb25kV2F5LnByaWNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGFuaWVzOiBbZmlyc3RDb21wYW55LCBzZWNvbmRDb21wYW55XSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaWNlczogW2ZpcnN0V2F5LnByaWNlLCBzZWNvbmRXYXkucHJpY2VdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZXM6IFt0aGlzLmNhbGxlckNvZGUsIHNlY29uZFdheS5zcmMuc3Vic3RyaW5nKDAsMiksIHRoaXMuY2FsbGVlQ29kZV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogdGhpcy5wYXRocy5sZW5ndGgrMQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGFuaWVzLmZvckVhY2godGhpcmRDb21wYW55ID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubXlEYXRhLmNvbXBhbnlbdGhpcmRDb21wYW55XS5mb3JFYWNoKHRoaXJkV2F5ID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXJkV2F5LnNyYyA9PT0gc2Vjb25kV2F5LmRlcyAmJiB0aGlyZFdheS5kZXMuc3Vic3RyaW5nKDAsMikgPT09IHRoaXMuY2FsbGVlQ29kZSl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXRocy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUHJpY2U6IGZpcnN0V2F5LnByaWNlICsgc2Vjb25kV2F5LnByaWNlICsgdGhpcmRXYXkucHJpY2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wYW5pZXM6IFtmaXJzdENvbXBhbnksIHNlY29uZENvbXBhbnksIHRoaXJkQ29tcGFueV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmljZXM6IFtmaXJzdFdheS5wcmljZSwgc2Vjb25kV2F5LnByaWNlLCB0aGlyZFdheS5wcmljZV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlczogW3RoaXMuY2FsbGVyQ29kZSwgc2Vjb25kV2F5LnNyYy5zdWJzdHJpbmcoMCwyKSwgdGhpcmRXYXkuc3JjLnN1YnN0cmluZygwLDIpLCB0aGlzLmNhbGxlZUNvZGVdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHRoaXMucGF0aHMubGVuZ3RoKzEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOyAgICAgICAgICAKICAgICAgICB9KTsKICAgICAgICB0aGlzLnNob3dQYXRocygpICAgICAgIAogICAgICAgIGNvbnNvbGUubG9nKHRoaXMucGF0aHMuc29ydCgoYSwgYikgPT4gYS50b3RhbFByaWNlID4gYi50b3RhbFByaWNlID8gMSA6IC0xKSkKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\"> -->\n    <!-- <HelloWorld msg=\"Welcome to Your Vue.js App\"/> -->\n    <div class=\"d-flex\">\n      <form id=\"inputform\" class=\"border shadow-sm h-50 p-3 mx-5 mb-3 bg-body rounded\">\n        <div class=\"labelcontainer\">\n          <label class=\"label\">Звонящая сторона (Caller)</label>\n        </div>\n        <select class=\"form-select mb-2\" id=\"caller\" v-model=\"caller\" v-on:change=\"createPath\">\n          <option v-for=\"(key, value) in myData.country\" :key=\"value\">{{ key }} ({{value}})</option>\n        </select>\n        \n        <div class=\"labelcontainer\">\n          <label class=\"label\">Принимающая сторона (Callee)</label>\n        </div>\n        <select class=\"form-select\" id=\"callee\" v-model=\"callee\" v-on:change=\"createPath\">\n          <option v-for=\"(key, value) in myData.country\" :key=\"value\">{{ key }} ({{value}}) </option>\n        </select>\n        <base-checkbox label=\"Все\" value=\"all\" v-model=\"All_isChecked\" v-on:change=\"setCheckbox\" :key=\"All_isChecked + 1\"/>\n        <base-checkbox label=\"Прямое соединение\" value=\"direct\" v-model=\"Direct_isChecked\" v-on:change=\"showPaths\" :key=\"Direct_isChecked + 10\"/>\n        <base-checkbox label=\"Один дополнительный узел\" value=\"one\" v-model=\"One_isChecked\" v-on:change=\"showPaths\" :key=\"One_isChecked + 20\"/>\n        <base-checkbox label=\"Два дополнительных узла\" value=\"two\" v-model=\"Two_isChecked\" v-on:change=\"showPaths\" :key=\"Two_isChecked + 30\"/>\n      </form>\n      <!-- <ul>\n        <call-view v-for=\"item in showedPaths.sort((a, b) => a.totalPrice > b.totalPrice ? 1 : -1)\" :key=\"item.id + item.nodes\" :path=\"item\">\n        </call-view>\n      </ul> -->\n      <list-view id=\"path-list\" :listData=\"showedPaths.sort((a, b) => a.totalPrice > b.totalPrice ? 1 : -1)\" :size=\"4\" :key=\"showedPaths\"/>\n    </div>\n  </div> \n   \n</template>\n\n<script>\n//import CallView from './components/CallView.vue'\nimport BaseCheckbox from './components/BaseCheckbox.vue'\nimport ListView from './components/ListView.vue'\nexport default {\n  name: 'App',\n  components: {\n    /* CallView, */ BaseCheckbox, ListView\n  },  \n  data(){\n    return{\n      caller: '', \n      callee: '',\n      All_isChecked: true,\n      Direct_isChecked: true,\n      One_isChecked: true,\n      Two_isChecked: true,\n      paths: [],\n      showedPaths: []\n    }\n  },  \n  mounted() {\n    this.$store.dispatch('GET_DATA');\n  },\n  computed: {\n    myData() {\n      return this.$store.getters.DATA;\n    },\n    callerCode() {\n      return this.caller.split(\" \")[1].substring(1, 3)\n    },\n    calleeCode() {\n      return this.callee.split(\" \")[1].substring(1, 3)\n    }\n  },\n  methods: {\n    setCheckbox(){      \n      if (this.All_isChecked) {\n        this.Direct_isChecked = true\n        this.One_isChecked = true\n        this.Two_isChecked = true\n      }\n      else {\n        this.Direct_isChecked = false\n        this.One_isChecked = false\n        this.Two_isChecked = false\n      }\n      this.showPaths()\n    },\n    \n    showPaths(){  \n      if (this.Direct_isChecked && this.One_isChecked && this.Two_isChecked) {\n        this.All_isChecked = true\n      } \n      if (!this.Direct_isChecked || !this.One_isChecked || !this.Two_isChecked) {\n        this.All_isChecked = false\n      }\n      this.showedPaths = []\n      if (this.caller != '' && this.callee != ''){\n        if (!this.All_isChecked){\n          if (this.Direct_isChecked){\n            this.paths.forEach(path => {\n              if (path.nodes.length == 2) {\n                this.showedPaths.push(path)\n              }\n            });\n          }\n          if (this.One_isChecked) {\n            this.paths.forEach(path => {\n              if (path.nodes.length == 3) {\n                this.showedPaths.push(path)\n              }\n            });\n          }\n          if (this.Two_isChecked) {\n            this.paths.forEach(path => {\n              if (path.nodes.length == 4) {\n                this.showedPaths.push(path)\n              }\n            });\n          }\n        }\n        else this.showedPaths = this.paths\n      }      \n    },\n    createPath () {\n      this.paths = []\n        console.log(this.callerCode)\n        if (this.caller != '' && this.callee != ''){\n          let companies = []\n          for (let company in this.myData.company) {\n            companies.push(company)        \n          } \n          let restricted = [this.callerCode]           \n          companies.forEach(firstCompany => {\n            this.myData.company[firstCompany].forEach(firstWay => {\n              if (firstWay.src.substring(0,2) === this.callerCode) {\n                if (firstWay.des.substring(0,2) === this.calleeCode) {\n                  this.paths.push({\n                    totalPrice: firstWay.price,\n                    companies: [firstCompany],\n                    prices: [firstWay.price],\n                    nodes: [this.callerCode, this.calleeCode],\n                    id: this.paths.length+1\n                  })                \n                }\n                else {\n                  restricted.push(firstWay.des.substring(0,2))\n                  companies.forEach(secondCompany => {\n                    this.myData.company[secondCompany].forEach(secondWay => {\n                      if (secondWay.src === firstWay.des && !(secondWay.des.substring(0,2) in restricted)){\n                        if (secondWay.des.substring(0,2) === this.calleeCode) {\n                          this.paths.push({\n                            totalPrice: firstWay.price + secondWay.price,\n                            companies: [firstCompany, secondCompany],\n                            prices: [firstWay.price, secondWay.price],\n                            nodes: [this.callerCode, secondWay.src.substring(0,2), this.calleeCode],\n                            id: this.paths.length+1\n                          })\n                        }\n                        else {\n                          companies.forEach(thirdCompany => {\n                            this.myData.company[thirdCompany].forEach(thirdWay => {\n                              if (thirdWay.src === secondWay.des && thirdWay.des.substring(0,2) === this.calleeCode){\n                                this.paths.push({\n                                  totalPrice: firstWay.price + secondWay.price + thirdWay.price,\n                                  companies: [firstCompany, secondCompany, thirdCompany],\n                                  prices: [firstWay.price, secondWay.price, thirdWay.price],\n                                  nodes: [this.callerCode, secondWay.src.substring(0,2), thirdWay.src.substring(0,2), this.calleeCode],\n                                  id: this.paths.length+1\n                                })\n                              }\n                            });\n                          });\n                        }\n                      }\n                    })\n                });\n              }\n            }\n          });          \n        });\n        this.showPaths()       \n        console.log(this.paths.sort((a, b) => a.totalPrice > b.totalPrice ? 1 : -1))\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n#inputform{\n  width: 30%;\n}\n#caller,#callee {\n  border-top: none;\n  border-left:none;\n  border-right: none;\n  border-color: gray;\n  border-width: 2px;\n  border-radius: 0%;\n}\n#path-list{\n  width: 50%;\n}\n.label{\n  font-size: 11px;\n  color: gray;\n}\n.labelcontainer{\n  text-align: left;\n}\n</style>"]}]}