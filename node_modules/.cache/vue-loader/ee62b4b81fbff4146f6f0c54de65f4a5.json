{"remainingRequest":"C:\\Projects\\calculator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\calculator\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Projects\\calculator\\src\\App.vue","mtime":1635636446459},{"path":"C:\\Projects\\calculator\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\calculator\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Projects\\calculator\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Projects\\calculator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\calculator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcCB7CiAgZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsKICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBjb2xvcjogIzJjM2U1MDsKICBtYXJnaW4tdG9wOiA2MHB4Owp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\"> -->\n    <!-- <HelloWorld msg=\"Welcome to Your Vue.js App\"/> -->\n    <select id=\"caller\" v-model=\"caller\" v-on:change=\"createPath\">\n      <option v-for=\"(key, value) in myData.country\" :key=\"value\">{{ key }} ({{value}})</option>\n    </select>\n    <select id=\"callee\" v-model=\"callee\" v-on:change=\"createPath\">\n      <option v-for=\"(key, value) in myData.country\" :key=\"value\">{{ key }} ({{value}}) </option>\n    </select>\n    <ul>\n      <li v-for=\"item in paths.sort((a, b) => a.totalPrice > b.totalPrice ? 1 : -1)\" :key=\"item.id\">\n        {{ item.totalPrice }}\n        <ul>\n          <li v-for=\"node in item.nodes\" :key=\"node\">{{node}}</li>\n        </ul>\n      </li>\n    </ul>\n    <p> you choose {{ caller }} and {{ callee }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  components: {\n    //InputCountry\n  },  \n  data(){\n    return{\n      caller: '', \n      callee: '',\n      paths: []\n    }\n  },  \n  mounted() {\n    this.$store.dispatch('GET_DATA');\n  },\n  computed: {\n    myData() {\n      return this.$store.getters.DATA;\n    },\n    callerCode() {\n      return this.caller.split(\" \")[1].substring(1, 3)\n    },\n    calleeCode() {\n      return this.callee.split(\" \")[1].substring(1, 3)\n    }\n  },\n  methods: {\n      createPath () {\n        console.log(this.callerCode)\n        if (this.callee != ''){\n          let companies = []\n          //console.log(this.myData.company)\n          for (let company in this.myData.company) {\n            companies.push(company)        \n          } \n          let restricted = [this.callerCode]\n          /* console.log(companies)\n          console.log(this.myData.company[companies[0]]) */            \n          companies.forEach(firstCompany => {\n            this.myData.company[firstCompany].forEach(firstWay => {\n              if (firstWay.src.substring(0,2) === this.callerCode) {\n                if (firstWay.des.substring(0,2) === this.calleeCode) {\n                  this.paths.push({\n                    totalPrice: firstWay.price,\n                    companies: [firstCompany],\n                    prices: [firstWay.price],\n                    nodes: [this.callerCode, this.calleeCode],\n                    id: this.paths.length+1\n                  })                \n                }\n                else {\n                  restricted.push(firstWay.des.substring(0,2))\n                  companies.forEach(secondCompany => {\n                    this.myData.company[secondCompany].forEach(secondWay => {\n                      if (secondWay.src === firstWay.des && !(secondWay.des.substring(0,2) in restricted)){\n                        if (secondWay.des.substring(0,2) === this.calleeCode) {\n                          this.paths.push({\n                            totalPrice: firstWay.price + secondWay.price,\n                            companies: [firstCompany, secondCompany],\n                            prices: [firstWay.price, secondWay.price],\n                            nodes: [this.callerCode, secondWay.src.substring(0,2), this.calleeCode],\n                            id: this.paths.length+1\n                          })\n                        }\n                        else {\n                          companies.forEach(thirdCompany => {\n                            this.myData.company[thirdCompany].forEach(thirdWay => {\n                              if (thirdWay.src === secondWay.des && thirdWay.des.substring(0,2) === this.calleeCode){\n                                this.paths.push({\n                                  totalPrice: firstWay.price + secondWay.price + thirdWay.price,\n                                  companies: [firstCompany, secondCompany, thirdCompany],\n                                  prices: [firstWay.price, secondWay.price, thirdWay.price],\n                                  nodes: [this.callerCode, secondWay.src.substring(0,2), thirdWay.src.substring(0,2), this.calleeCode],\n                                  id: this.paths.length+1\n                                })\n                              }\n                            });\n                          });\n                        }\n                      }\n                    })\n                });\n              }\n            }\n          });          \n        });       \n        console.log(this.paths.sort((a, b) => a.totalPrice > b.totalPrice ? 1 : -1))\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>"]}]}