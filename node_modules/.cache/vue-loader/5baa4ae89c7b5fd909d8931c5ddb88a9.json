{"remainingRequest":"C:\\Projects\\calculator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\calculator\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projects\\calculator\\src\\App.vue","mtime":1639408744560},{"path":"C:\\Projects\\calculator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\calculator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Projects\\calculator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\calculator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCYXNlQ2hlY2tib3ggZnJvbSAnLi9jb21wb25lbnRzL0Jhc2VDaGVja2JveC52dWUnCmltcG9ydCBUaGVMaXN0VmlldyBmcm9tICcuL2NvbXBvbmVudHMvVGhlTGlzdFZpZXcudnVlJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czogewogICAgQmFzZUNoZWNrYm94LCBUaGVMaXN0VmlldwogIH0sICAKICBkYXRhKCl7CiAgICByZXR1cm57CiAgICAgIGNhbGxlcjogJycsIAogICAgICBjYWxsZWU6ICcnLAogICAgICBBbGxfaXNDaGVja2VkOiB0cnVlLAogICAgICBEaXJlY3RfaXNDaGVja2VkOiB0cnVlLAogICAgICBPbmVfaXNDaGVja2VkOiB0cnVlLAogICAgICBUd29faXNDaGVja2VkOiB0cnVlLAogICAgICBwYXRoczogW10sCiAgICAgIHNob3dlZFBhdGhzOiBbXQogICAgfQogIH0sICAKICBtb3VudGVkKCkgewogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0dFVF9EQVRBJyk7CiAgfSwKICBjb21wdXRlZDogewogICAgbXlEYXRhKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5EQVRBOwogICAgfSwKICAgIGNhbGxlckNvZGUoKSB7CiAgICAgIHJldHVybiB0aGlzLmNhbGxlci5zcGxpdCgiICIpWzFdLnN1YnN0cmluZygxLCAzKQogICAgfSwKICAgIGNhbGxlZUNvZGUoKSB7CiAgICAgIHJldHVybiB0aGlzLmNhbGxlZS5zcGxpdCgiICIpWzFdLnN1YnN0cmluZygxLCAzKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8gc2V0cyB0cnVlIG9yIGZhbHNlIGZvciBhbGwgY2hlY2tib3hlcyBkZXBlbmRpbmcgb24gdGhlICdBbGwnIGNoZWNrYm94CiAgICBzZXRDaGVja2JveCgpeyAgICAgIAogICAgICBpZiAodGhpcy5BbGxfaXNDaGVja2VkKSB7CiAgICAgICAgdGhpcy5EaXJlY3RfaXNDaGVja2VkID0gdHJ1ZQogICAgICAgIHRoaXMuT25lX2lzQ2hlY2tlZCA9IHRydWUKICAgICAgICB0aGlzLlR3b19pc0NoZWNrZWQgPSB0cnVlCiAgICAgIH0KICAgICAgZWxzZSB7CiAgICAgICAgdGhpcy5EaXJlY3RfaXNDaGVja2VkID0gZmFsc2UKICAgICAgICB0aGlzLk9uZV9pc0NoZWNrZWQgPSBmYWxzZQogICAgICAgIHRoaXMuVHdvX2lzQ2hlY2tlZCA9IGZhbHNlCiAgICAgIH0KICAgICAgdGhpcy5zaG93UGF0aHMoKQogICAgfSwKICAgIHNob3dQYXRocygpewogICAgLy9zZXRzIHRydWUgb3IgZmFsc2UgZm9yICdBbGwnIGNoZWNrYm94IGRlcGVuZGluZyBvbiB0aGUgb3RoZXIgY2hlY2tib3hlcwogICAgaWYgKHRoaXMuRGlyZWN0X2lzQ2hlY2tlZCAmJiB0aGlzLk9uZV9pc0NoZWNrZWQgJiYgdGhpcy5Ud29faXNDaGVja2VkKSB7CiAgICAgIHRoaXMuQWxsX2lzQ2hlY2tlZCA9IHRydWUKICAgIH0gCiAgICBpZiAoIXRoaXMuRGlyZWN0X2lzQ2hlY2tlZCB8fCAhdGhpcy5PbmVfaXNDaGVja2VkIHx8ICF0aGlzLlR3b19pc0NoZWNrZWQpIHsKICAgICAgdGhpcy5BbGxfaXNDaGVja2VkID0gZmFsc2UKICAgIH0KICAgIC8vc2hvd3MgcGF0aHMgY29ycmVzcG9uZGVudCB0byBzZXR0ZWQgY2hlY2tib3hlcwogICAgdGhpcy5zaG93ZWRQYXRocyA9IFtdCiAgICBpZiAodGhpcy5jYWxsZXIgIT0gJycgJiYgdGhpcy5jYWxsZWUgIT0gJycpewogICAgICBpZiAoIXRoaXMuQWxsX2lzQ2hlY2tlZCl7CiAgICAgICAgaWYgKHRoaXMuRGlyZWN0X2lzQ2hlY2tlZCl7CiAgICAgICAgICB0aGlzLnBhdGhzLmZvckVhY2gocGF0aCA9PiB7CiAgICAgICAgICAgIGlmIChwYXRoLm5vZGVzLmxlbmd0aCA9PSAyKSB7CiAgICAgICAgICAgICAgdGhpcy5zaG93ZWRQYXRocy5wdXNoKHBhdGgpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICBpZiAodGhpcy5PbmVfaXNDaGVja2VkKSB7CiAgICAgICAgICB0aGlzLnBhdGhzLmZvckVhY2gocGF0aCA9PiB7CiAgICAgICAgICAgIGlmIChwYXRoLm5vZGVzLmxlbmd0aCA9PSAzKSB7CiAgICAgICAgICAgICAgdGhpcy5zaG93ZWRQYXRocy5wdXNoKHBhdGgpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICBpZiAodGhpcy5Ud29faXNDaGVja2VkKSB7CiAgICAgICAgICB0aGlzLnBhdGhzLmZvckVhY2gocGF0aCA9PiB7CiAgICAgICAgICAgIGlmIChwYXRoLm5vZGVzLmxlbmd0aCA9PSA0KSB7CiAgICAgICAgICAgICAgdGhpcy5zaG93ZWRQYXRocy5wdXNoKHBhdGgpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgICBlbHNlIHRoaXMuc2hvd2VkUGF0aHMgPSB0aGlzLnBhdGhzCiAgICB9ICAgICAgCiAgfSwgICAKICAgIC8vZmlucyBhbGwgcG9zc2libGUgY2FsbCBwYXRocyBmcm9tIENhbGxlciB0byBDYWxsZWUKICAgIGNyZWF0ZVBhdGggKCkgewogICAgICB0aGlzLnBhdGhzID0gW10KICAgICAgICBpZiAodGhpcy5jYWxsZXIgIT0gJycgJiYgdGhpcy5jYWxsZWUgIT0gJycpewogICAgICAgICAgbGV0IGNvbXBhbmllcyA9IFtdICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBuYW1lcyBvZiBhbGwgdGVsZWNvbXBhbmllcwogICAgICAgICAgZm9yIChsZXQgY29tcGFueSBpbiB0aGlzLm15RGF0YS5jb21wYW55KSB7CiAgICAgICAgICAgIGNvbXBhbmllcy5wdXNoKGNvbXBhbnkpICAgICAgICAKICAgICAgICAgIH0gCiAgICAgICAgICBsZXQgcmVzdHJpY3RlZCA9IFt0aGlzLmNhbGxlckNvZGVdICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFscmVhZHkgdXNlZCBjYWxsIG5vZGVzICAgICAgICAgCiAgICAgICAgICBjb21wYW5pZXMuZm9yRWFjaChmaXJzdENvbXBhbnkgPT4gewogICAgICAgICAgICB0aGlzLm15RGF0YS5jb21wYW55W2ZpcnN0Q29tcGFueV0uZm9yRWFjaChmaXJzdFdheSA9PiB7CiAgICAgICAgICAgICAgaWYgKGZpcnN0V2F5LnNyYy5zdWJzdHJpbmcoMCwyKSA9PT0gdGhpcy5jYWxsZXJDb2RlKSB7CiAgICAgICAgICAgICAgICAvL2ZpbmRzIGFsbCBkaXJlY3QgcGF0aHMKICAgICAgICAgICAgICAgIGlmIChmaXJzdFdheS5kZXMuc3Vic3RyaW5nKDAsMikgPT09IHRoaXMuY2FsbGVlQ29kZSkgewogICAgICAgICAgICAgICAgICB0aGlzLnBhdGhzLnB1c2goewogICAgICAgICAgICAgICAgICAgIHRvdGFsUHJpY2U6IGZpcnN0V2F5LnByaWNlLAogICAgICAgICAgICAgICAgICAgIGNvbXBhbmllczogW2ZpcnN0Q29tcGFueV0sCiAgICAgICAgICAgICAgICAgICAgcHJpY2VzOiBbZmlyc3RXYXkucHJpY2VdLAogICAgICAgICAgICAgICAgICAgIG5vZGVzOiBbdGhpcy5jYWxsZXJDb2RlLCB0aGlzLmNhbGxlZUNvZGVdLAogICAgICAgICAgICAgICAgICAgIGlkOiB0aGlzLnBhdGhzLmxlbmd0aCsxCiAgICAgICAgICAgICAgICAgIH0pICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgIHJlc3RyaWN0ZWQucHVzaChmaXJzdFdheS5kZXMuc3Vic3RyaW5nKDAsMikpICAgICAgICAgICAgIC8vIHNhdmVzIHZhbHVlIG9mIHRyYW5zaXQgbm9kZQogICAgICAgICAgICAgICAgICBjb21wYW5pZXMuZm9yRWFjaChzZWNvbmRDb21wYW55ID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm15RGF0YS5jb21wYW55W3NlY29uZENvbXBhbnldLmZvckVhY2goc2Vjb25kV2F5ID0+IHsKICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWNvbmRXYXkuc3JjID09PSBmaXJzdFdheS5kZXMgJiYgIShzZWNvbmRXYXkuZGVzLnN1YnN0cmluZygwLDIpIGluIHJlc3RyaWN0ZWQpKXsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gZmluZHMgYWxsIHBhdGhzIHdpdGggb25lIHRyYW5zaXQgbm9kZQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2Vjb25kV2F5LmRlcy5zdWJzdHJpbmcoMCwyKSA9PT0gdGhpcy5jYWxsZWVDb2RlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXRocy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUHJpY2U6IGZpcnN0V2F5LnByaWNlICsgc2Vjb25kV2F5LnByaWNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGFuaWVzOiBbZmlyc3RDb21wYW55LCBzZWNvbmRDb21wYW55XSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaWNlczogW2ZpcnN0V2F5LnByaWNlLCBzZWNvbmRXYXkucHJpY2VdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZXM6IFt0aGlzLmNhbGxlckNvZGUsIHNlY29uZFdheS5zcmMuc3Vic3RyaW5nKDAsMiksIHRoaXMuY2FsbGVlQ29kZV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogdGhpcy5wYXRocy5sZW5ndGgrMQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGFuaWVzLmZvckVhY2godGhpcmRDb21wYW55ID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubXlEYXRhLmNvbXBhbnlbdGhpcmRDb21wYW55XS5mb3JFYWNoKHRoaXJkV2F5ID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9maW5kcyBhbGwgcGF0aHMgd2l0aCB0d28gdHJhbnNpdCBub2RlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcmRXYXkuc3JjID09PSBzZWNvbmRXYXkuZGVzICYmIHRoaXJkV2F5LmRlcy5zdWJzdHJpbmcoMCwyKSA9PT0gdGhpcy5jYWxsZWVDb2RlKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhdGhzLnB1c2goewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxQcmljZTogZmlyc3RXYXkucHJpY2UgKyBzZWNvbmRXYXkucHJpY2UgKyB0aGlyZFdheS5wcmljZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhbmllczogW2ZpcnN0Q29tcGFueSwgc2Vjb25kQ29tcGFueSwgdGhpcmRDb21wYW55XSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaWNlczogW2ZpcnN0V2F5LnByaWNlLCBzZWNvbmRXYXkucHJpY2UsIHRoaXJkV2F5LnByaWNlXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVzOiBbdGhpcy5jYWxsZXJDb2RlLCBzZWNvbmRXYXkuc3JjLnN1YnN0cmluZygwLDIpLCB0aGlyZFdheS5zcmMuc3Vic3RyaW5nKDAsMiksIHRoaXMuY2FsbGVlQ29kZV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogdGhpcy5wYXRocy5sZW5ndGgrMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSk7ICAgICAgICAgIAogICAgICAgIH0pOwogICAgICAgIC8vY2FsbCBmb3Igc2hvd2luZyBvZiBmaW5kZWQgcGF0aHMKICAgICAgICB0aGlzLnNob3dQYXRocygpICAgICAgIAogICAgICAgIGNvbnNvbGUubG9nKHRoaXMucGF0aHMuc29ydCgoYSwgYikgPT4gYS50b3RhbFByaWNlID4gYi50b3RhbFByaWNlID8gMSA6IC0xKSkKICAgICAgfQogICAgfQogIH0gIAp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    \n    <p id=\"title\" class=\"w-100 mx-auto my-3\">Расчитать дешевый маршрут</p>\n    <div v-if=\"myData\" class=\"d-flex\">\n      <form id=\"inputform\" class=\"border shadow-sm h-50 p-3 mx-5 mb-3 bg-body rounded\">\n\n        <div class=\"labelcontainer\">\n          <label class=\"label\">Звонящая сторона (Caller)</label>\n        </div>\n        <select class=\"form-select mb-2 shadow-none\" id=\"caller\" v-model=\"caller\" v-on:change=\"createPath\">\n          <option v-for=\"(key, value) in myData.country\" :key=\"value\">{{ key }} ({{value}})</option>\n        </select>\n        \n        <div class=\"labelcontainer\">\n          <label class=\"label\">Принимающая сторона (Callee)</label>\n        </div>\n        <select class=\"form-select shadow-none\" id=\"callee\" v-model=\"callee\" v-on:change=\"createPath\">\n          <option v-for=\"(key, value) in myData.country\" :key=\"value\">{{ key }} ({{value}}) </option>\n        </select>\n        <base-checkbox label=\"Все\" v-model=\"All_isChecked\" v-on:change=\"setCheckbox\" :key=\"All_isChecked + 1\"/>\n        <base-checkbox label=\"Прямое соединение\" v-model=\"Direct_isChecked\" v-on:change=\"showPaths\" :key=\"Direct_isChecked + 10\"/>\n        <base-checkbox label=\"Один дополнительный узел\" v-model=\"One_isChecked\" v-on:change=\"showPaths\" :key=\"One_isChecked + 20\"/>\n        <base-checkbox label=\"Два дополнительных узла\" v-model=\"Two_isChecked\" v-on:change=\"showPaths\" :key=\"Two_isChecked + 30\"/>\n      </form>\n\n      <the-list-view id=\"path-list\" :listData=\"showedPaths.sort((a, b) => a.totalPrice > b.totalPrice ? 1 : -1)\" :size=\"4\" :key=\"showedPaths\"/>\n    </div>\n  </div> \n   \n</template>\n\n<script>\nimport BaseCheckbox from './components/BaseCheckbox.vue'\nimport TheListView from './components/TheListView.vue'\nexport default {\n  name: 'App',\n  components: {\n    BaseCheckbox, TheListView\n  },  \n  data(){\n    return{\n      caller: '', \n      callee: '',\n      All_isChecked: true,\n      Direct_isChecked: true,\n      One_isChecked: true,\n      Two_isChecked: true,\n      paths: [],\n      showedPaths: []\n    }\n  },  \n  mounted() {\n    this.$store.dispatch('GET_DATA');\n  },\n  computed: {\n    myData() {\n      return this.$store.getters.DATA;\n    },\n    callerCode() {\n      return this.caller.split(\" \")[1].substring(1, 3)\n    },\n    calleeCode() {\n      return this.callee.split(\" \")[1].substring(1, 3)\n    }\n  },\n  methods: {\n    // sets true or false for all checkboxes depending on the 'All' checkbox\n    setCheckbox(){      \n      if (this.All_isChecked) {\n        this.Direct_isChecked = true\n        this.One_isChecked = true\n        this.Two_isChecked = true\n      }\n      else {\n        this.Direct_isChecked = false\n        this.One_isChecked = false\n        this.Two_isChecked = false\n      }\n      this.showPaths()\n    },\n    showPaths(){\n    //sets true or false for 'All' checkbox depending on the other checkboxes\n    if (this.Direct_isChecked && this.One_isChecked && this.Two_isChecked) {\n      this.All_isChecked = true\n    } \n    if (!this.Direct_isChecked || !this.One_isChecked || !this.Two_isChecked) {\n      this.All_isChecked = false\n    }\n    //shows paths correspondent to setted checkboxes\n    this.showedPaths = []\n    if (this.caller != '' && this.callee != ''){\n      if (!this.All_isChecked){\n        if (this.Direct_isChecked){\n          this.paths.forEach(path => {\n            if (path.nodes.length == 2) {\n              this.showedPaths.push(path)\n            }\n          });\n        }\n        if (this.One_isChecked) {\n          this.paths.forEach(path => {\n            if (path.nodes.length == 3) {\n              this.showedPaths.push(path)\n            }\n          });\n        }\n        if (this.Two_isChecked) {\n          this.paths.forEach(path => {\n            if (path.nodes.length == 4) {\n              this.showedPaths.push(path)\n            }\n          });\n        }\n      }\n      else this.showedPaths = this.paths\n    }      \n  },   \n    //fins all possible call paths from Caller to Callee\n    createPath () {\n      this.paths = []\n        if (this.caller != '' && this.callee != ''){\n          let companies = []                                            // names of all telecompanies\n          for (let company in this.myData.company) {\n            companies.push(company)        \n          } \n          let restricted = [this.callerCode]                            // already used call nodes         \n          companies.forEach(firstCompany => {\n            this.myData.company[firstCompany].forEach(firstWay => {\n              if (firstWay.src.substring(0,2) === this.callerCode) {\n                //finds all direct paths\n                if (firstWay.des.substring(0,2) === this.calleeCode) {\n                  this.paths.push({\n                    totalPrice: firstWay.price,\n                    companies: [firstCompany],\n                    prices: [firstWay.price],\n                    nodes: [this.callerCode, this.calleeCode],\n                    id: this.paths.length+1\n                  })                \n                }\n                else {\n                  restricted.push(firstWay.des.substring(0,2))             // saves value of transit node\n                  companies.forEach(secondCompany => {\n                    this.myData.company[secondCompany].forEach(secondWay => {\n                      if (secondWay.src === firstWay.des && !(secondWay.des.substring(0,2) in restricted)){\n                        // finds all paths with one transit node\n                        if (secondWay.des.substring(0,2) === this.calleeCode) {\n                          this.paths.push({\n                            totalPrice: firstWay.price + secondWay.price,\n                            companies: [firstCompany, secondCompany],\n                            prices: [firstWay.price, secondWay.price],\n                            nodes: [this.callerCode, secondWay.src.substring(0,2), this.calleeCode],\n                            id: this.paths.length+1\n                          })\n                        }\n                        else {\n                          companies.forEach(thirdCompany => {\n                            this.myData.company[thirdCompany].forEach(thirdWay => {\n                              //finds all paths with two transit nodes\n                              if (thirdWay.src === secondWay.des && thirdWay.des.substring(0,2) === this.calleeCode){\n                                this.paths.push({\n                                  totalPrice: firstWay.price + secondWay.price + thirdWay.price,\n                                  companies: [firstCompany, secondCompany, thirdCompany],\n                                  prices: [firstWay.price, secondWay.price, thirdWay.price],\n                                  nodes: [this.callerCode, secondWay.src.substring(0,2), thirdWay.src.substring(0,2), this.calleeCode],\n                                  id: this.paths.length+1\n                                })\n                              }\n                            });\n                          });\n                        }\n                      }\n                    })\n                });\n              }\n            }\n          });          \n        });\n        //call for showing of finded paths\n        this.showPaths()       \n        console.log(this.paths.sort((a, b) => a.totalPrice > b.totalPrice ? 1 : -1))\n      }\n    }\n  }  \n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 20px;\n}\n#title{\n  font-weight: bold;\n  font-size: 25px;\n}\n#inputform{\n  width: 30%;\n}\n#caller,#callee {\n  border-top: none;\n  border-left:none;\n  border-right: none;\n  border-color: gray;\n  border-width: 2px;\n  border-radius: 0%;\n  outline: 0;\n}\n#path-list{\n  width: 50%;\n  height: 100%;\n}\n.label{\n  font-size: 11px;\n  color: gray;\n}\n.labelcontainer{\n  text-align: left;\n}\n</style>"]}]}